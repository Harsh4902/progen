name: Build
on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ['1.20']
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Print SDK Versions
        run: |
          java -version
          go version
      - name: Test
        run: go test -v ./...

      - name: Build
        run: go build -v .

  dev-releases-matrix:
    name: Release Go Binary
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20]
        goos: [ linux, windows, darwin ]
        goarch: [ amd64, arm64 ]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          release_name: dev
          overwrite: true
          extra_files: LICENSE README.md